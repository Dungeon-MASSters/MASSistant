id,text
0,Привет !
1,"Меня зовут Владислав Ефимов , я работаю в команде ВК Рекламы ."
2,"Прежде чем приступить к изучению языка , я кратко расскажу о преимуществах этого языка программирования , какие задачи можно с помощью него решать и в каких IT - профессиях он используется ."
3,Начнем с отличительных преимуществ языка .
4,"Во-первых , это простой для понимания использование язык ."
5,"У языка Python , пожалуй , один из самых простых и понятных синтаксисов относительно других языков ."
6,"Во-вторых , язык интерпретируемый ."
7,"Это значит , что вы можете написать код и сразу его запустить , не прибегая к шагу компиляции ."
8,"Он позволяет исполнять код строка за строкой , что бывает очень удобно и полезно при разработке и исследованиях ."
9,"В-третьих , это популярный язык , а значит для него существует множество готовых библиотек , которые решают реальные задачи , а не придется придумывать и писать какие-то вещи с нуля ."
10,"В-четвертых , популярность языка также означает большое сообщество разработчиков и энтузиастов ."
11,"Из-за этого в сети можно найти много гайдов , обсуждений , обучающих материалов и многого другого ."
12,"И в-пятых , портативность ."
13,"Код на Python , написанный на одной платформе , например , на Mac , спокойно запустится на другой , например , на Windows ."
14,"Если говорить об областях применения , то язык Python применяется во многих , например , в областях , например , во-первых , это веб-разработка ."
15,Можно строить бэкэнд - веб-приложения в качестве веб-разработчика .
16,"Большой набор библиотек и встроенных инструментов позволяет построить как небольшое приложение , так и большой сложный сервис с базами данных и микросервисами ."
17,"Во-вторых , машинное обучение и искусственный интеллект ."
18,В качестве ML-специалиста можно разрабатывать различные решения на этом языке .
19,От простых статистических моделей до сложных нейронных сетей .
20,"А скомбинировав это с разработкой веб-приложения , можно создать свой неповторимый онлайн - сервис ."
21,"В-третьих , анализ данных ."
22,"Аналитикам данных Python помогает проверки гипотез , визуализации и обработки данных ."
23,"Что немаловажно , все это получается делать быстро и удобно с понятным и несложным синтаксисом Python ."
24,"В-четвертых , автоматизация тестирования ."
25,"И , конечно , как и любой код , код на Python , особенно если это уже не маленький проект , нуждается в тестировании ."
26,Поэтому профессия тестировщика Python тоже очень актуальна .
27,"И , как и во всех предыдущих предыдущих , для тестирования существует множество готовых библиотек ."
28,Теперь перейдем к изучению языка .
29,"На этом уроке вы узнаете об интерпретаторе Python , про его интерактивный режим и запуск отдельных файлов с кодом , о базовых понятиях языка , таких как литерал переменная , об IDE PyCharm и как начать в ней работать , о получении данных со стандартного ввода ."
30,"Теперь поговорим немного о базовых вещах , а именно об интерпретаторе Python ."
31,Что такое интерпретатор ?
32,"Это программа , выполняющая обосроченный анализ , обработку и выполнение исходного кода Python ."
33,"Если вы уже проследовали инструкцию , которая была приложена к этому уроку , вы уже должны были по инструкции установить интерпретатор Python и IDE PyCharm ."
34,Давайте начнем с интерпретатора .
35,"Для того , чтобы запустить интерпретатор , нам нужно открыть терминал и написать там ключевое слово Python ."
36,"Если вы все правильно сделали , у вас откроется интерактивная среда Python ."
37,В ней вы можете выполнять код строка за строкой .
38,"Например , вы можете вывести какую-нибудь строку ."
39,Это делается с помощью функции print .
40,Давайте выведем стандартный для начала курсов всех по языкам программирования Hello World .
41,"Видим , что после нашего ввода на выводе появилась Hello World ."
42,"На самом деле , можно вывести , чтобы в таком режиме выполнять все конструкции языка , даже если они в одну строку не помещаются ."
43,Об этом мы поговорим чуть позже .
44,"А теперь давайте поговорим о том , как запустить исходный код Python с помощью интерпретатора , но уже не в интерактивном режиме ."
45,"Для этого давайте откроем любой текстовый редактор , который вам удобен ."
46,В моем случае это Sublime Text .
47,И напишем тоже текст .
48,Принт Hello World .
49,Сохраним это .
50,Отлично .
51,Мы сохранили это в файле hello.py .
52,Давайте теперь вернемся в терминал .
53,Я это сохранил в папку example .
54,Посмотрим .
55,Вот он наш hello.py .
56,"Чтобы запустить исходный код через файл , нужно написать также ключевое слово Python ."
57,И указать файл вместе с расширением hello.py .
58,"Видим , что на стандартный вывод вывелся Hello World ."
59,"Это абсолютно аналогично тому , что мы делали в интерактивной среде ."
60,Мы сейчас рассмотрели варианты разработки в интерактивной среде и в текстовом файле .
61,Но для промышленной разработки такие варианты не подходят .
62,"Но на самом деле , конечно , можно ."
63,В текстовом редакторе все делать .
64,"Но существует такое понятие , как интерактивная среда разработки IDE ."
65,Чем они полезны ?
66,"Как минимум , это текстовый редактор тоже ."
67,"Во-вторых , они предлагают разные инструменты для запуска и отладки вашего кода ."
68,А также помогают вам с синтаксисом языка .
69,То есть с переносами .
70,"Где-то вы описались , что-то забыли , опечатались ."
71,Вам эта интерактивная среда подсветит .
72,И предложит иногда даже варианты исправления .
73,Вы уже по инструкции должны были установить IDE PageArm .
74,"Давайте ее откроем , запустим ."
75,"Для вас будет приветствовать такое окно , в котором можно создать либо новый проект ."
76,Давайте попробуем .
77,"Здесь мы выбираем , во-первых , куда мы его сохраним ."
78,Тут некоторые значения по умолчанию нам подсказывает сама IDE .
79,Но обычно мы хотим в какой-то другой проект .
80,"Если мы хотим его сохранить , то можно это выбрать ."
81,И также нужно выбрать интерпретатор .
82,"Скорее всего , у вас будет один из вариантов ."
83,"Тот , что вы установили ."
84,"Но если у вас есть несколько вариантов , то вы можете выбрать подходящий ."
85,Но нас сейчас будет больше интересовать открытие уже существующего проекта .
86,Это кнопка Open .
87,Выбираете папку и нажимаете Open .
88,У вас открывается ваш проект .
89,"И вот , собственно , тут в левой части информация о проекте ."
90,Мы можем увидеть структуру нашего проекта .
91,"Наша папка Example и Hello , Py ."
92,"И видим вот то же самое , что мы набирали в текстовом редакторе ."
93,Давайте попробуем запустить эту программу .
94,Выбираем Run .
95,Здесь еще раз Run .
96,И здесь Hello .
97,Выбираем .
98,"И видим , что получили тот же вывод ."
99,"Hello , World ."
100,"Первая строка , она на самом деле аналогична тому , что мы писали в интерпретаторе без интерактивного режима ."
101,"То есть Python , Hello.py ."
102,Только еще с дополнительными опциями и абсолютными путями .
103,"И в конце у нас есть сообщение , которое говорит нам о том , что мы завершились с кодом 0 ."
104,"Ну , то есть без ошибок это обычно значит ."
105,Давайте теперь поговорим о базовых вещах в языке Python .
106,Начнем с литерала .
107,"Литерал — это то же самое , что константа ."
108,"Например , 123 — число — это константа ."
109,Строка ABC — это тоже константа .
110,Следующая сущность — это переменная .
111,Что такое переменная ?
112,"Это сущность в коде , используемая для хранения данных ."
113,"Например , промежуточного результата ."
114,В языке Python переменная задается следующим образом .
115,Задается сначала имя переменной .
116,Пусть будет var .
117,Потом знак равенства .
118,И дальше выражение некоторое .
119,Давайте мы напишем здесь 123 .
120,Что значит этот код ?
121,"Значит , что в переменную с именем var записать значение литерала 123 ."
122,Также можно создать другую переменную var2 .
123,И в нее записать строку ABC .
124,Замечательно .
125,Язык Python является динамически типизированным .
126,Что это значит ?
127,"Это значит , что нам не нужно писать имя типа перед объявлением перемены ."
128,"Это дополнительно значит , что мы в любую переменную можем положить любое значение ."
129,То есть любой тип .
130,"Например , мы можем в переменную var3 положить сначала 123 , что является числовым типом данных ."
131,А потом туда же положить строку ABC .
132,И это будет валидным кодом .
133,Интерпретатор на это не будет ругаться .
134,Все хорошо .
135,Что еще хотел сразу подметить .
136,В языке часто будете встречать конструкции с такой вот решеткой .
137,Это называется комментарий .
138,"Видите , нам даже IDE специальным образом выделила этот кусок кода ."
139,Он стал серым .
140,Для чего это нужно ?
141,"Это , во-первых , называется комментарием ."
142,"Во-вторых , это нужно , чтобы какие-то куски кода , или каких-то комментариев ваших , возможно словесных пояснений , интерпретатор не обрабатывал как код , а просто пропускал ."
143,Также можно комментировать сразу несколько строк и раскомментировать обратно .
144,"Например , на macOS это комбинация command -slash ."
145,Комментирует либо раскомментирует обратно .
146,"Давайте теперь поговорим о том , как вводить данные пользователя с клавиатуры ."
147,Для этого есть функция input .
148,Давайте рассмотрим следующий фрагмент кода .
149,"Мы в переменную var3 записываем значение того , что нам вернет функция input ."
150,"Она нам вернет то , что пользователь введет с командной строки ."
151,При этом в командной строке пользователя будет ожидать вот это сообщение .
152,Enter your age .
153,"Давайте запустим этот фрагмент кода и посмотрим , что у нас получится ."
154,"Как видим , это не фрагмент кода ."
155,"Как видим , программа вывела приветственное сообщение ."
156,Enter your age .
157,Давайте передадим ей туда 123 .
158,Нажмем Enter .
159,"И видим , что программа завершилась ."
160,Потому что мы с этими данными ничего не делали .
161,Записали просто в переменную и дальше вышли из программы .
162,"Давайте проверим , что на самом деле то , что мы ввели , оно и выведется ."
163,Добавив вот такой кусок кода .
164,Выведем print hello .
165,Давайте выведем еще какую-нибудь переменную .
166,Нашу var .
167,Дополнительно .
168,И переменную myvar3 .
169,"По идее у нас должно вывести hello , потом 123 и то , что мы введем с командной строки ."
170,Давайте пробовать .
171,"Давайте в этот раз что-нибудь введем не 103 , а 456 ."
172,"Как мы видим , как и ожидалось , вывелось hello , потом 123 , а потом то , что мы ввели из командной строки ."
173,То есть 456 .
174,Ну и дальше программа завершилась .
175,И в заключение давайте еще расскажу про Python консоль в IDE PyCharm .
176,"То есть то , что мы запускали в терминале , можно запустить и в самой IDE ."
177,Здесь в правой части есть вот такая иконка Python консоль .
178,Мы просто ее нажимаем .
179,Запускается некий процесс .
180,И на самом деле запускается Python интерпретатор в интерактивном режиме .
181,"Здесь мы также то же самое все можем делать , что делали при обычном запуске интерпретатора ."
182,"Ну , например , давайте опять hello world напишем ."
183,print hello world .
184,Enter .
185,"Вот , программа вывела hello world ."
186,То же самое на самом деле давайте с input еще раз попробуем .
187,Давайте какую-нибудь переменную var .
188,Запишем значение input .
189,"Отмечу , что можно приветственное сообщение вообще не писать , а ставить просто круглые скобочки ."
190,Тогда просто от вас программа будет ожидать сразу вот без какого-то приветствия .
191,Ну давайте здесь abc123 передадим .
192,Enter .
193,Отлично .
194,"И посмотрим , что у нас в переменной var ."
195,"То есть чтобы посмотреть , что в переменной var , можно написать ее имя ."
196,И нажать Enter .
197,Вам интерпретатор сразу выведет ее значение .
198,То есть не обязательно писать print в интерактивном режиме в этом случае .
199,То есть будет примерно то же самое .
200,На этом уроке мы познакомились с интерпретатором Python .
201,"Узнали , как работать с ним в интерактивном режиме ."
202,Как запускать код из файла с его помощью .
203,Познакомились с IDE PyCharm .
204,"Узнали , как базово разрабатывать код в ней ."
205,Написали свою первую программу hello world .
206,"А также разобрались с такими понятиями , как literal , переменные ."
207,Научились выводить данные в консоль .
208,А также считывать пользовательские данные со стандартного ввода .
