 Привет! Меня зовут Владислав Ефимов, я работаю в команде ВК Рекламы. Прежде чем приступить к изучению языка, я кратко расскажу о преимуществах этого языка программирования, какие задачи можно с помощью него решать и в каких IT-профессиях он используется. Начнем с отличительных преимуществ языка. Во-первых, это простой для понимания использование язык. У языка Python, пожалуй, один из самых простых и понятных синтаксисов относительно других языков. Во-вторых, язык интерпретируемый. Это значит, что вы можете написать код и сразу его запустить, не прибегая к шагу компиляции. Он позволяет исполнять код строка за строкой, что бывает очень удобно и полезно при разработке и исследованиях. В-третьих, это популярный язык, а значит для него существует множество готовых библиотек, которые решают реальные задачи, а не придется придумывать и писать какие-то вещи с нуля. В-четвертых, популярность языка также означает большое сообщество разработчиков и энтузиастов. Из-за этого в сети можно найти много гайдов, обсуждений, обучающих материалов и многого другого. И в-пятых, портативность. Код на Python, написанный на одной платформе, например, на Mac, спокойно запустится на другой, например, на Windows. Если говорить об областях применения, то язык Python применяется во многих, например, в областях, например, во-первых, это веб-разработка. Можно строить бэкэнд-веб-приложения в качестве веб-разработчика. Большой набор библиотек и встроенных инструментов позволяет построить как небольшое приложение, так и большой сложный сервис с базами данных и микросервисами. Во-вторых, машинное обучение и искусственный интеллект. В качестве ML-специалиста можно разрабатывать различные решения на этом языке. От простых статистических моделей до сложных нейронных сетей. А скомбинировав это с разработкой веб-приложения, можно создать свой неповторимый онлайн-сервис. В-третьих, анализ данных. Аналитикам данных Python помогает проверки гипотез, визуализации и обработки данных. Что немаловажно, все это получается делать быстро и удобно с понятным и несложным синтаксисом Python. В-четвертых, автоматизация тестирования. И, конечно, как и любой код, код на Python, особенно если это уже не маленький проект, нуждается в тестировании. Поэтому профессия тестировщика Python тоже очень актуальна. И, как и во всех предыдущих предыдущих, для тестирования существует множество готовых библиотек. Теперь перейдем к изучению языка. На этом уроке вы узнаете об интерпретаторе Python, про его интерактивный режим и запуск отдельных файлов с кодом, о базовых понятиях языка, таких как литерал переменная, об IDE PyCharm и как начать в ней работать, о получении данных со стандартного ввода. Теперь поговорим немного о базовых вещах, а именно об интерпретаторе Python. Что такое интерпретатор? Это программа, выполняющая обосроченный анализ, обработку и выполнение исходного кода Python. Если вы уже проследовали инструкцию, которая была приложена к этому уроку, вы уже должны были по инструкции установить интерпретатор Python и IDE PyCharm. Давайте начнем с интерпретатора. Для того, чтобы запустить интерпретатор, нам нужно открыть терминал и написать там ключевое слово Python. Если вы все правильно сделали, у вас откроется интерактивная среда Python. В ней вы можете выполнять код строка за строкой. Например, вы можете вывести какую-нибудь строку. Это делается с помощью функции print. Давайте выведем стандартный для начала курсов всех по языкам программирования Hello World. Видим, что после нашего ввода на выводе появилась Hello World. На самом деле, можно вывести, чтобы в таком режиме выполнять все конструкции языка, даже если они в одну строку не помещаются. Об этом мы поговорим чуть позже. А теперь давайте поговорим о том, как запустить исходный код Python с помощью интерпретатора, но уже не в интерактивном режиме. Для этого давайте откроем любой текстовый редактор, который вам удобен. В моем случае это Sublime Text. И напишем тоже текст. Принт Hello World. Сохраним это. Отлично. Мы сохранили это в файле hello.py. Давайте теперь вернемся в терминал. Я это сохранил в папку example. Посмотрим. Вот он наш hello.py. Чтобы запустить исходный код через файл, нужно написать также ключевое слово Python. И указать файл вместе с расширением hello.py. Видим, что на стандартный вывод вывелся Hello World. Это абсолютно аналогично тому, что мы делали в интерактивной среде. Мы сейчас рассмотрели варианты разработки в интерактивной среде и в текстовом файле. Но для промышленной разработки такие варианты не подходят. Но на самом деле, конечно, можно. В текстовом редакторе все делать. Но существует такое понятие, как интерактивная среда разработки IDE. Чем они полезны? Как минимум, это текстовый редактор тоже. Во-вторых, они предлагают разные инструменты для запуска и отладки вашего кода. А также помогают вам с синтаксисом языка. То есть с переносами. Где-то вы описались, что-то забыли, опечатались. Вам эта интерактивная среда подсветит. И предложит иногда даже варианты исправления. Вы уже по инструкции должны были установить IDE PageArm. Давайте ее откроем, запустим. Для вас будет приветствовать такое окно, в котором можно создать либо новый проект. Давайте попробуем. Здесь мы выбираем, во-первых, куда мы его сохраним. Тут некоторые значения по умолчанию нам подсказывает сама IDE. Но обычно мы хотим в какой-то другой проект. Если мы хотим его сохранить, то можно это выбрать. И также нужно выбрать интерпретатор. Скорее всего, у вас будет один из вариантов. Тот, что вы установили. Но если у вас есть несколько вариантов, то вы можете выбрать подходящий. Но нас сейчас будет больше интересовать открытие уже существующего проекта. Это кнопка Open. Выбираете папку и нажимаете Open. У вас открывается ваш проект. И вот, собственно, тут в левой части информация о проекте. Мы можем увидеть структуру нашего проекта. Наша папка Example и Hello, Py. И видим вот то же самое, что мы набирали в текстовом редакторе. Давайте попробуем запустить эту программу. Выбираем Run. Здесь еще раз Run. И здесь Hello. Выбираем. И видим, что получили тот же вывод. Hello, World. Первая строка, она на самом деле аналогична тому, что мы писали в интерпретаторе без интерактивного режима. То есть Python, Hello.py. Только еще с дополнительными опциями и абсолютными путями. И в конце у нас есть сообщение, которое говорит нам о том, что мы завершились с кодом 0. Ну, то есть без ошибок это обычно значит. Давайте теперь поговорим о базовых вещах в языке Python. Начнем с литерала. Литерал — это то же самое, что константа. Например, 123 — число — это константа. Строка ABC — это тоже константа. Следующая сущность — это переменная. Что такое переменная? Это сущность в коде, используемая для хранения данных. Например, промежуточного результата. В языке Python переменная задается следующим образом. Задается сначала имя переменной. Пусть будет var. Потом знак равенства. И дальше выражение некоторое. Давайте мы напишем здесь 123. Что значит этот код? Значит, что в переменную с именем var записать значение литерала 123. Также можно создать другую переменную var2. И в нее записать строку ABC. Замечательно. Язык Python является динамически типизированным. Что это значит? Это значит, что нам не нужно писать имя типа перед объявлением перемены. Это дополнительно значит, что мы в любую переменную можем положить любое значение. То есть любой тип. Например, мы можем в переменную var3 положить сначала 123, что является числовым типом данных. А потом туда же положить строку ABC. И это будет валидным кодом. Интерпретатор на это не будет ругаться. Все хорошо. Что еще хотел сразу подметить. В языке часто будете встречать конструкции с такой вот решеткой. Это называется комментарий. Видите, нам даже IDE специальным образом выделила этот кусок кода. Он стал серым. Для чего это нужно? Это, во-первых, называется комментарием. Во-вторых, это нужно, чтобы какие-то куски кода, или каких-то комментариев ваших, возможно словесных пояснений, интерпретатор не обрабатывал как код, а просто пропускал. Также можно комментировать сразу несколько строк и раскомментировать обратно. Например, на macOS это комбинация command-slash. Комментирует либо раскомментирует обратно. Давайте теперь поговорим о том, как вводить данные пользователя с клавиатуры. Для этого есть функция input. Давайте рассмотрим следующий фрагмент кода. Мы в переменную var3 записываем значение того, что нам вернет функция input. Она нам вернет то, что пользователь введет с командной строки. При этом в командной строке пользователя будет ожидать вот это сообщение. Enter your age. Давайте запустим этот фрагмент кода и посмотрим, что у нас получится. Как видим, это не фрагмент кода. Как видим, программа вывела приветственное сообщение. Enter your age. Давайте передадим ей туда 123. Нажмем Enter. И видим, что программа завершилась. Потому что мы с этими данными ничего не делали. Записали просто в переменную и дальше вышли из программы. Давайте проверим, что на самом деле то, что мы ввели, оно и выведется. Добавив вот такой кусок кода. Выведем print hello. Давайте выведем еще какую-нибудь переменную. Нашу var. Дополнительно. И переменную myvar3. По идее у нас должно вывести hello, потом 123 и то, что мы введем с командной строки. Давайте пробовать. Давайте в этот раз что-нибудь введем не 103, а 456. Как мы видим, как и ожидалось, вывелось hello, потом 123, а потом то, что мы ввели из командной строки. То есть 456. Ну и дальше программа завершилась. И в заключение давайте еще расскажу про Python консоль в IDE PyCharm. То есть то, что мы запускали в терминале, можно запустить и в самой IDE. Здесь в правой части есть вот такая иконка Python консоль. Мы просто ее нажимаем. Запускается некий процесс. И на самом деле запускается Python интерпретатор в интерактивном режиме. Здесь мы также то же самое все можем делать, что делали при обычном запуске интерпретатора. Ну, например, давайте опять hello world напишем. print hello world. Enter. Вот, программа вывела hello world. То же самое на самом деле давайте с input еще раз попробуем. Давайте какую-нибудь переменную var. Запишем значение input. Отмечу, что можно приветственное сообщение вообще не писать, а ставить просто круглые скобочки. Тогда просто от вас программа будет ожидать сразу вот без какого-то приветствия. Ну давайте здесь abc123 передадим. Enter. Отлично. И посмотрим, что у нас в переменной var. То есть чтобы посмотреть, что в переменной var, можно написать ее имя. И нажать Enter. Вам интерпретатор сразу выведет ее значение. То есть не обязательно писать print в интерактивном режиме в этом случае. То есть будет примерно то же самое. На этом уроке мы познакомились с интерпретатором Python. Узнали, как работать с ним в интерактивном режиме. Как запускать код из файла с его помощью. Познакомились с IDE PyCharm. Узнали, как базово разрабатывать код в ней. Написали свою первую программу hello world. А также разобрались с такими понятиями, как literal, переменные. Научились выводить данные в консоль. А также считывать пользовательские данные со стандартного ввода.